// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Jinjernot

//@version=4
study("Sabarobe", overlay=true)

//bollinger
length = input(20, minval=1)
src = input(close, title="Source")
mult = input(2.0, minval=0.001, maxval=50, title="StdDev")
basis = sma(src, length)
dev = mult * stdev(src, length)
upper = basis + dev
lower = basis - dev
offset = input(0, "Offset", type = input.integer, minval = -500, maxval = 500)
plot(basis, "BB Mid", color=#9bbc0f, offset = offset)
p1 = plot(upper, "BB Upper", color=#9bbc0f, offset = offset)
p2 = plot(lower, "BB Lower", color=#9bbc0f, offset = offset)
fill(p1, p2, title = "BB Background", color=color.rgb(33, 150, 243, 95))

//MA

ma5 = sma(close, 5)
ma10 = sma(close, 10)

short = sma(close, 50)
longer = sma(close, 100)
longest = sma(close, 200)

plot(ma5, "MA5", color=#00FF00)
plot(ma10, "MA10", color=#00FF00)

plot(short, "MA50", color=#00FF00)
plot(longer, "MA100", color=#0000FF)
plot(longest, "MA200", color=#FF0000)

//EMA
chiquita = ema(close, 10)
mediana = ema(close, 55)
grandota = ema(close, 100)
grandotota = ema(close, 200)

plot(chiquita, "EMA10", color=#00FF00)
plot(mediana, "EMA55", color=#0000FF)
plot(grandota, "EMA100", color=#FF0000)
plot(grandotota, "EMA200", color=#AAAA00)

//Ichimoku

conversionPeriods = input(9, minval=1, title="Conversion Line Length")
basePeriods = input(26, minval=1, title="Base Line Length")
laggingSpan2Periods = input(52, minval=1, title="Leading Span B Length")
displacement = input(26, minval=1, title="Displacement")
donchian(len) => avg(lowest(len), highest(len))
conversionLine = donchian(conversionPeriods)
baseLine = donchian(basePeriods)
leadLine1 = avg(conversionLine, baseLine)
leadLine2 = donchian(laggingSpan2Periods)
plot(conversionLine, color=#2962FF, title="Conversion Line")
plot(baseLine, color=#B71C1C, title="Base Line")
plot(close, offset = -displacement + 1, color=#43A047, title="Lagging Span")
p3 = plot(leadLine1, offset = displacement - 1, color=#A5D6A7,
	 title="Leading Span A")
p4 = plot(leadLine2, offset = displacement - 1, color=#EF9A9A,
	 title="Leading Span B")
fill(p3, p4, color = leadLine1 > leadLine2 ? color.rgb(67, 160, 71, 90) : color.rgb(244, 67, 54, 90))

//indicador

highesthigh = highest(high, 20)
lowestlow = lowest(low, 20)
bullishEC = close >= open[1] and close[1] < open[1]
bearishEC = close <= open[1] and close[1] > open[1]
displayhigh = highesthigh <= high
displaylow = lowestlow >= low
plotshape(displayhigh and bearishEC, title="Sell", style=shape.triangledown, color=color.red, size = size.normal)
plotshape(displaylow and bullishEC, title="Buy", style=shape.triangleup, location=location.belowbar, color=color.green, size = size.normal)

periodK = input(14, title="K", minval=1)
periodD = input(3, title="D", minval=1)
smoothK = input(3, title="Smooth", minval=1)
k = sma(stoch(close, high, low, periodK), smoothK)
d = sma(k, periodD)

overbought = 80
oversold = 20

co = crossover(k,d) and k[1] < oversold
cu = crossunder(k,d) and k[1] > overbought
coLower = close < valuewhen(co, close, 1)
coUpper = close < valuewhen(cu, close, 1)

plotshape(co, color = color.green, location = location.belowbar)
plotshape(cu, color = color.red, location = location.abovebar)
bgcolor(co and coLower ? color.lime : na)
bgcolor(cu and coUpper ? color.red : na)
